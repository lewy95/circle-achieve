<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xzxy.lewy.circleachieve.mapper.AddressMapper">
  <resultMap id="BaseResultMap" type="cn.xzxy.lewy.circleachieve.pojo.Address">
    <id column="address_id" jdbcType="SMALLINT" property="addressId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="address2" jdbcType="VARCHAR" property="address2" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="city_id" jdbcType="SMALLINT" property="cityId" />
    <result column="postal_code" jdbcType="VARCHAR" property="postalCode" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.xzxy.lewy.circleachieve.pojo.Address">
    <result column="location" jdbcType="BINARY" property="location" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    address_id, address, address2, district, city_id, postal_code, phone, last_update
  </sql>
  <sql id="Blob_Column_List">
    location
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.xzxy.lewy.circleachieve.pojo.AddressExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from address
    where address_id = #{addressId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where address_id = #{addressId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.AddressExample">
    delete from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xzxy.lewy.circleachieve.pojo.Address">
    insert into address (address_id, address, address2, 
      district, city_id, postal_code, 
      phone, last_update, location
      )
    values (#{addressId,jdbcType=SMALLINT}, #{address,jdbcType=VARCHAR}, #{address2,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{cityId,jdbcType=SMALLINT}, #{postalCode,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{lastUpdate,jdbcType=TIMESTAMP}, #{location,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xzxy.lewy.circleachieve.pojo.Address">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        address_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="address2 != null">
        address2,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
      <if test="location != null">
        location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressId != null">
        #{addressId,jdbcType=SMALLINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null">
        #{address2,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.AddressExample" resultType="java.lang.Long">
    select count(*) from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update address
    <set>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=SMALLINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.address2 != null">
        address2 = #{record.address2,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=SMALLINT},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update address
    set address_id = #{record.addressId,jdbcType=SMALLINT},
      address = #{record.address,jdbcType=VARCHAR},
      address2 = #{record.address2,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=SMALLINT},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update address
    set address_id = #{record.addressId,jdbcType=SMALLINT},
      address = #{record.address,jdbcType=VARCHAR},
      address2 = #{record.address2,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=SMALLINT},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xzxy.lewy.circleachieve.pojo.Address">
    update address
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null">
        address2 = #{address2,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=BINARY},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.xzxy.lewy.circleachieve.pojo.Address">
    update address
    set address = #{address,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=SMALLINT},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=BINARY}
    where address_id = #{addressId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xzxy.lewy.circleachieve.pojo.Address">
    update address
    set address = #{address,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=SMALLINT},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where address_id = #{addressId,jdbcType=SMALLINT}
  </update>
</mapper>