<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xzxy.lewy.circleachieve.mapper.StaffMapper">
  <resultMap id="BaseResultMap" type="cn.xzxy.lewy.circleachieve.pojo.Staff">
    <id column="staff_id" jdbcType="TINYINT" property="staffId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="address_id" jdbcType="SMALLINT" property="addressId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="store_id" jdbcType="TINYINT" property="storeId" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.xzxy.lewy.circleachieve.pojo.Staff">
    <result column="picture" jdbcType="LONGVARBINARY" property="picture" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    staff_id, first_name, last_name, address_id, email, store_id, active, username, password, 
    last_update
  </sql>
  <sql id="Blob_Column_List">
    picture
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.xzxy.lewy.circleachieve.pojo.StaffExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.StaffExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from staff
    where staff_id = #{staffId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where staff_id = #{staffId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.StaffExample">
    delete from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xzxy.lewy.circleachieve.pojo.Staff">
    insert into staff (staff_id, first_name, last_name, 
      address_id, email, store_id, 
      active, username, password, 
      last_update, picture)
    values (#{staffId,jdbcType=TINYINT}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{addressId,jdbcType=SMALLINT}, #{email,jdbcType=VARCHAR}, #{storeId,jdbcType=TINYINT}, 
      #{active,jdbcType=BIT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{lastUpdate,jdbcType=TIMESTAMP}, #{picture,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cn.xzxy.lewy.circleachieve.pojo.Staff">
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
      <if test="picture != null">
        picture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        #{staffId,jdbcType=TINYINT},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=SMALLINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=TINYINT},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xzxy.lewy.circleachieve.pojo.StaffExample" resultType="java.lang.Long">
    select count(*) from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update staff
    <set>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=TINYINT},
      </if>
      <if test="record.firstName != null">
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null">
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=SMALLINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=TINYINT},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=BIT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update staff
    set staff_id = #{record.staffId,jdbcType=TINYINT},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=SMALLINT},
      email = #{record.email,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=TINYINT},
      active = #{record.active,jdbcType=BIT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      picture = #{record.picture,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update staff
    set staff_id = #{record.staffId,jdbcType=TINYINT},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=SMALLINT},
      email = #{record.email,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=TINYINT},
      active = #{record.active,jdbcType=BIT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xzxy.lewy.circleachieve.pojo.Staff">
    update staff
    <set>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=SMALLINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=TINYINT},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where staff_id = #{staffId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.xzxy.lewy.circleachieve.pojo.Staff">
    update staff
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=TINYINT},
      active = #{active,jdbcType=BIT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      picture = #{picture,jdbcType=LONGVARBINARY}
    where staff_id = #{staffId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xzxy.lewy.circleachieve.pojo.Staff">
    update staff
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=TINYINT},
      active = #{active,jdbcType=BIT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where staff_id = #{staffId,jdbcType=TINYINT}
  </update>
</mapper>